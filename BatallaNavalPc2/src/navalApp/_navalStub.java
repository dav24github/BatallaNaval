package navalApp;


/**
* navalApp/_navalStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from navalApp.idl
* lunes 4 de junio de 2018 02:47:00 PM BOT
*/

public class _navalStub extends org.omg.CORBA.portable.ObjectImpl implements navalApp.naval
{

  public int getId ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getId", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getId (        );
            } finally {
                _releaseReply ($in);
            }
  } // getId

  public void ListoParaJugar (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ListoParaJugar", true);
                $out.write_long (id);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                ListoParaJugar (id        );
            } finally {
                _releaseReply ($in);
            }
  } // ListoParaJugar

  public boolean getListoParaJugarRival (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getListoParaJugarRival", true);
                $out.write_long (id);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getListoParaJugarRival (id        );
            } finally {
                _releaseReply ($in);
            }
  } // getListoParaJugarRival

  public boolean pedirTurno (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("pedirTurno", true);
                $out.write_long (id);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return pedirTurno (id        );
            } finally {
                _releaseReply ($in);
            }
  } // pedirTurno

  public void pasarTurno (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("pasarTurno", true);
                $out.write_long (id);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                pasarTurno (id        );
            } finally {
                _releaseReply ($in);
            }
  } // pasarTurno

  public void setMiMatrix (int[][] array, int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setMiMatrix", true);
                navalApp.navalPackage.MatrixArrayHelper.write ($out, array);
                $out.write_long (id);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setMiMatrix (array, id        );
            } finally {
                _releaseReply ($in);
            }
  } // setMiMatrix

  public int[][] getMiMatrix (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getMiMatrix", true);
                $out.write_long (id);
                $in = _invoke ($out);
                int $result[][] = navalApp.navalPackage.MatrixArrayHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getMiMatrix (id        );
            } finally {
                _releaseReply ($in);
            }
  } // getMiMatrix

  public void setMiMatrixBool (boolean[][] array, int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setMiMatrixBool", true);
                navalApp.navalPackage.MatrixArrayBoolHelper.write ($out, array);
                $out.write_long (id);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setMiMatrixBool (array, id        );
            } finally {
                _releaseReply ($in);
            }
  } // setMiMatrixBool

  public boolean[][] getMiMatrixBool (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getMiMatrixBool", true);
                $out.write_long (id);
                $in = _invoke ($out);
                boolean $result[][] = navalApp.navalPackage.MatrixArrayBoolHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getMiMatrixBool (id        );
            } finally {
                _releaseReply ($in);
            }
  } // getMiMatrixBool

  public void setSuMatrix (int[][] array, int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setSuMatrix", true);
                navalApp.navalPackage.MatrixArrayHelper.write ($out, array);
                $out.write_long (id);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setSuMatrix (array, id        );
            } finally {
                _releaseReply ($in);
            }
  } // setSuMatrix

  public int[][] getSuMatrix (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getSuMatrix", true);
                $out.write_long (id);
                $in = _invoke ($out);
                int $result[][] = navalApp.navalPackage.MatrixArrayHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getSuMatrix (id        );
            } finally {
                _releaseReply ($in);
            }
  } // getSuMatrix

  public void setSuMatrixBool (boolean[][] array, int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setSuMatrixBool", true);
                navalApp.navalPackage.MatrixArrayBoolHelper.write ($out, array);
                $out.write_long (id);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setSuMatrixBool (array, id        );
            } finally {
                _releaseReply ($in);
            }
  } // setSuMatrixBool

  public boolean[][] getSuMatrixBool (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getSuMatrixBool", true);
                $out.write_long (id);
                $in = _invoke ($out);
                boolean $result[][] = navalApp.navalPackage.MatrixArrayBoolHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getSuMatrixBool (id        );
            } finally {
                _releaseReply ($in);
            }
  } // getSuMatrixBool

  public void heGanado (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("heGanado", true);
                $out.write_long (id);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                heGanado (id        );
            } finally {
                _releaseReply ($in);
            }
  } // heGanado

  public boolean[] ganadorPerdedor (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ganadorPerdedor", true);
                $out.write_long (id);
                $in = _invoke ($out);
                boolean $result[] = navalApp.navalPackage.VectorHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return ganadorPerdedor (id        );
            } finally {
                _releaseReply ($in);
            }
  } // ganadorPerdedor

  public void reiniciarPartida (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("reiniciarPartida", true);
                $out.write_long (id);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                reiniciarPartida (id        );
            } finally {
                _releaseReply ($in);
            }
  } // reiniciarPartida

  public boolean validarCelda (int f, int c)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("validarCelda", true);
                $out.write_long (f);
                $out.write_long (c);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return validarCelda (f, c        );
            } finally {
                _releaseReply ($in);
            }
  } // validarCelda

  public boolean validarPosicionBarco (int[][] array, int tam, int f, int c, int hor)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("validarPosicionBarco", true);
                navalApp.navalPackage.MatrixArrayHelper.write ($out, array);
                $out.write_long (tam);
                $out.write_long (f);
                $out.write_long (c);
                $out.write_long (hor);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return validarPosicionBarco (array, tam, f, c, hor        );
            } finally {
                _releaseReply ($in);
            }
  } // validarPosicionBarco

  public void colocarBarco (int[][] array, int tam)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("colocarBarco", true);
                navalApp.navalPackage.MatrixArrayHelper.write ($out, array);
                $out.write_long (tam);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                colocarBarco (array, tam        );
            } finally {
                _releaseReply ($in);
            }
  } // colocarBarco

  public boolean victoria (int[][] array1, boolean[][] array2)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("victoria", true);
                navalApp.navalPackage.MatrixArrayHelper.write ($out, array1);
                navalApp.navalPackage.MatrixArrayBoolHelper.write ($out, array2);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return victoria (array1, array2        );
            } finally {
                _releaseReply ($in);
            }
  } // victoria

  public boolean disparo (int[][] array1, int valor, boolean[][] array2)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("disparo", true);
                navalApp.navalPackage.MatrixArrayHelper.write ($out, array1);
                $out.write_long (valor);
                navalApp.navalPackage.MatrixArrayBoolHelper.write ($out, array2);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return disparo (array1, valor, array2        );
            } finally {
                _releaseReply ($in);
            }
  } // disparo

  public void shutdown ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("shutdown", false);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                shutdown (        );
            } finally {
                _releaseReply ($in);
            }
  } // shutdown

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:navalApp/naval:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _navalStub
