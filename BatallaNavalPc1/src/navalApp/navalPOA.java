package navalApp;


/**
* navalApp/navalPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from navalApp.idl
* lunes 4 de junio de 2018 02:47:00 PM BOT
*/

public abstract class navalPOA extends org.omg.PortableServer.Servant
 implements navalApp.navalOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getId", new java.lang.Integer (0));
    _methods.put ("ListoParaJugar", new java.lang.Integer (1));
    _methods.put ("getListoParaJugarRival", new java.lang.Integer (2));
    _methods.put ("pedirTurno", new java.lang.Integer (3));
    _methods.put ("pasarTurno", new java.lang.Integer (4));
    _methods.put ("setMiMatrix", new java.lang.Integer (5));
    _methods.put ("getMiMatrix", new java.lang.Integer (6));
    _methods.put ("setMiMatrixBool", new java.lang.Integer (7));
    _methods.put ("getMiMatrixBool", new java.lang.Integer (8));
    _methods.put ("setSuMatrix", new java.lang.Integer (9));
    _methods.put ("getSuMatrix", new java.lang.Integer (10));
    _methods.put ("setSuMatrixBool", new java.lang.Integer (11));
    _methods.put ("getSuMatrixBool", new java.lang.Integer (12));
    _methods.put ("heGanado", new java.lang.Integer (13));
    _methods.put ("ganadorPerdedor", new java.lang.Integer (14));
    _methods.put ("reiniciarPartida", new java.lang.Integer (15));
    _methods.put ("validarCelda", new java.lang.Integer (16));
    _methods.put ("validarPosicionBarco", new java.lang.Integer (17));
    _methods.put ("colocarBarco", new java.lang.Integer (18));
    _methods.put ("victoria", new java.lang.Integer (19));
    _methods.put ("disparo", new java.lang.Integer (20));
    _methods.put ("shutdown", new java.lang.Integer (21));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // navalApp/naval/getId
       {
         int $result = (int)0;
         $result = this.getId ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 1:  // navalApp/naval/ListoParaJugar
       {
         int id = in.read_long ();
         this.ListoParaJugar (id);
         out = $rh.createReply();
         break;
       }

       case 2:  // navalApp/naval/getListoParaJugarRival
       {
         int id = in.read_long ();
         boolean $result = false;
         $result = this.getListoParaJugarRival (id);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 3:  // navalApp/naval/pedirTurno
       {
         int id = in.read_long ();
         boolean $result = false;
         $result = this.pedirTurno (id);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 4:  // navalApp/naval/pasarTurno
       {
         int id = in.read_long ();
         this.pasarTurno (id);
         out = $rh.createReply();
         break;
       }

       case 5:  // navalApp/naval/setMiMatrix
       {
         int array[][] = navalApp.navalPackage.MatrixArrayHelper.read (in);
         int id = in.read_long ();
         this.setMiMatrix (array, id);
         out = $rh.createReply();
         break;
       }

       case 6:  // navalApp/naval/getMiMatrix
       {
         int id = in.read_long ();
         int $result[][] = null;
         $result = this.getMiMatrix (id);
         out = $rh.createReply();
         navalApp.navalPackage.MatrixArrayHelper.write (out, $result);
         break;
       }

       case 7:  // navalApp/naval/setMiMatrixBool
       {
         boolean array[][] = navalApp.navalPackage.MatrixArrayBoolHelper.read (in);
         int id = in.read_long ();
         this.setMiMatrixBool (array, id);
         out = $rh.createReply();
         break;
       }

       case 8:  // navalApp/naval/getMiMatrixBool
       {
         int id = in.read_long ();
         boolean $result[][] = null;
         $result = this.getMiMatrixBool (id);
         out = $rh.createReply();
         navalApp.navalPackage.MatrixArrayBoolHelper.write (out, $result);
         break;
       }

       case 9:  // navalApp/naval/setSuMatrix
       {
         int array[][] = navalApp.navalPackage.MatrixArrayHelper.read (in);
         int id = in.read_long ();
         this.setSuMatrix (array, id);
         out = $rh.createReply();
         break;
       }

       case 10:  // navalApp/naval/getSuMatrix
       {
         int id = in.read_long ();
         int $result[][] = null;
         $result = this.getSuMatrix (id);
         out = $rh.createReply();
         navalApp.navalPackage.MatrixArrayHelper.write (out, $result);
         break;
       }

       case 11:  // navalApp/naval/setSuMatrixBool
       {
         boolean array[][] = navalApp.navalPackage.MatrixArrayBoolHelper.read (in);
         int id = in.read_long ();
         this.setSuMatrixBool (array, id);
         out = $rh.createReply();
         break;
       }

       case 12:  // navalApp/naval/getSuMatrixBool
       {
         int id = in.read_long ();
         boolean $result[][] = null;
         $result = this.getSuMatrixBool (id);
         out = $rh.createReply();
         navalApp.navalPackage.MatrixArrayBoolHelper.write (out, $result);
         break;
       }

       case 13:  // navalApp/naval/heGanado
       {
         int id = in.read_long ();
         this.heGanado (id);
         out = $rh.createReply();
         break;
       }

       case 14:  // navalApp/naval/ganadorPerdedor
       {
         int id = in.read_long ();
         boolean $result[] = null;
         $result = this.ganadorPerdedor (id);
         out = $rh.createReply();
         navalApp.navalPackage.VectorHelper.write (out, $result);
         break;
       }

       case 15:  // navalApp/naval/reiniciarPartida
       {
         int id = in.read_long ();
         this.reiniciarPartida (id);
         out = $rh.createReply();
         break;
       }

       case 16:  // navalApp/naval/validarCelda
       {
         int f = in.read_long ();
         int c = in.read_long ();
         boolean $result = false;
         $result = this.validarCelda (f, c);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 17:  // navalApp/naval/validarPosicionBarco
       {
         int array[][] = navalApp.navalPackage.MatrixArrayHelper.read (in);
         int tam = in.read_long ();
         int f = in.read_long ();
         int c = in.read_long ();
         int hor = in.read_long ();
         boolean $result = false;
         $result = this.validarPosicionBarco (array, tam, f, c, hor);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 18:  // navalApp/naval/colocarBarco
       {
         int array[][] = navalApp.navalPackage.MatrixArrayHelper.read (in);
         int tam = in.read_long ();
         this.colocarBarco (array, tam);
         out = $rh.createReply();
         break;
       }

       case 19:  // navalApp/naval/victoria
       {
         int array1[][] = navalApp.navalPackage.MatrixArrayHelper.read (in);
         boolean array2[][] = navalApp.navalPackage.MatrixArrayBoolHelper.read (in);
         boolean $result = false;
         $result = this.victoria (array1, array2);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 20:  // navalApp/naval/disparo
       {
         int array1[][] = navalApp.navalPackage.MatrixArrayHelper.read (in);
         int valor = in.read_long ();
         boolean array2[][] = navalApp.navalPackage.MatrixArrayBoolHelper.read (in);
         boolean $result = false;
         $result = this.disparo (array1, valor, array2);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 21:  // navalApp/naval/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:navalApp/naval:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public naval _this() 
  {
    return navalHelper.narrow(
    super._this_object());
  }

  public naval _this(org.omg.CORBA.ORB orb) 
  {
    return navalHelper.narrow(
    super._this_object(orb));
  }


} // class navalPOA
